#version: '3.9'

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:  
      - 3000:3000
    # volumes:
    #   - grafana_data:/var/lib/grafana
    restart: always
    networks:
      - backend
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #command: docker restart prometheus
    #command: docker cp ./prometheus.yml prometheus:/etc/prometheus/prometheus.yml
    depends_on:
      - grafana
      - api
    restart: always
    networks:
      - backend

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- portainer_data:/data
    restart: always
    networks:
      - backend
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports: 
      - "8080:8080"
    restart: always


  
  # postgres:
  #   image: postgres:latest
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./backup:/var/lib/postgresql/data  
  #   environment:
  #     POSTGRES_PASSWORD: postgrespassword
  #     POSTGRES_DB: db_users
  #   networks:
  #     - backend

  postgres-exporter:  
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:dbDan.24@34.174.100.178:5432/db_store?sslmode=disable"
    links:
      #- postgres
      - prometheus
    restart: always
    networks:
      - backend

  api:
    image: node-ncapas
    container_name: api-node
    build: ./server
    ports:
      - 8000:8000
    env_file: ./server/.env
    networks:
      - backend

  node-exporter:
    image: prom/node-exporter
    container_name: namenode-exporter
    ports:
      - "9100: 9100"
    restart: always
    


  
  
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d/
  #   depends_on:
  #     - api
  #   restart: always
  #   networks:
  #     - backend

# volumes:
#   portainer_data:
#   grafana_data:
#     driver: local

networks:
  backend:
